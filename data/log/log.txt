[main.py       32                      __init__()]# INFO       Context created
[main.py       85                           run()]# INFO       Starting main loop
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f1f7f1413c8>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f1f7f141630>>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f1f7f141390>>
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler will processes an event: <bound method MainActor.update of <actor.MainActor object at 0x7f1f7134d940>>
[map.py        51                      __init__()]# INFO       Creating Map
[actor.py     204                      __init__()]# INFO       Creating mobs container
[map.py        51                      __init__()]# INFO       Creating Map
[actor.py     204                      __init__()]# INFO       Creating mobs container
[immovables.py  42                      __init__()]# INFO       Creating ImmovablesContainer
[map.py        61                      load_map()]# INFO       Loading map from file: data/maps_fields/map1.txt
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 0
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 1
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 3
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 4
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 5
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 6
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 7
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 8
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 9
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 10
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 11
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 12
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 13
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 1 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 9
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 1 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 1 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 2 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 2 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 3 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 4
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 3 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 3 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 9
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 10
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 11
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 12
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 13
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 5 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 2
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 5 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 5 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 6 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 7
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 6 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 12
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 6 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 6 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 7 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 7 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 7 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 7 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 8 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 8 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 8 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 8 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 1
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 6
[map.py        83                      load_map()]# INFO       Creating MainActor cell, coords: 9 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 9 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 10 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 10 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 10 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 0
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 1
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 3
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 4
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 5
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 6
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 7
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 8
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 9
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 10
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 11
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 12
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 13
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 15
[map.py       109                      __init__()]# INFO       Creating MapView:<class 'map.MainMapView'>
[map.py       109                      __init__()]# INFO       Creating MapView:<class 'map.CornerMapView'>
[map.py        51                      __init__()]# INFO       Creating Map
[actor.py     204                      __init__()]# INFO       Creating mobs container
[immovables.py  42                      __init__()]# INFO       Creating ImmovablesContainer
[map.py        61                      load_map()]# INFO       Loading map from file: data/maps_fields/map1.txt
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 0
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 1
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 3
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 4
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 5
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 6
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 7
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 8
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 9
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 10
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 11
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 12
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 13
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 0 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 1 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 9
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 1 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 1 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 1 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 2 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 2 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 2 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 3 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 4
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 3 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 3 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 3 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 4 9
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 10
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 11
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 12
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 13
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 4 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 5 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 2
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 5 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 5 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 5 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 6 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 7
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 6 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 10
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 12
[map.py        89                      load_map()]# INFO       Creating Mob cell, coords: 6 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 6 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 6 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 7 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 7 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 7 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 7 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 7 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 8 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 8 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 8 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 8 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 8 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 1
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 6
[map.py        83                      load_map()]# INFO       Creating MainActor cell, coords: 9 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 9 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 9 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 9 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 10 0
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 1
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 2
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 3
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 4
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 5
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 6
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 7
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 8
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 9
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 10
[map.py        94                      load_map()]# INFO       Creating Immutable cell, coords: 10 11
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 12
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 13
[map.py        77                      load_map()]# INFO       Creating Empty cell, coords: 10 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 10 15
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 0
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 1
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 2
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 3
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 4
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 5
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 6
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 7
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 8
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 9
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 10
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 11
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 12
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 13
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 14
[map.py        80                      load_map()]# INFO       Creating Wall cell, coords: 11 15
[map.py       109                      __init__()]# INFO       Creating MapView:<class 'map.MainMapView'>
[map.py       109                      __init__()]# INFO       Creating MapView:<class 'map.CornerMapView'>
[textobject.py   9                      __init__()]# INFO       Creating TextsContainer text_callback:<bound method MainActor.get_printable_text of <actor.MainActor object at 0x7f750edbb8d0>>
[main.py       32                      __init__()]# INFO       Context created
[main.py       85                           run()]# INFO       Starting main loop
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py      94           face_with_immovable()]# INFO       MainActor facing with immovable:9 11
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py      94           face_with_immovable()]# INFO       MainActor facing with immovable:10 11
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py      94           face_with_immovable()]# INFO       MainActor facing with immovable:8 11
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py      94           face_with_immovable()]# INFO       MainActor facing with immovable:7 11
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py     106               face_with_actor()]# INFO       MainActor facing with mob:7 11
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py     106               face_with_actor()]# INFO       MainActor facing with mob:5 12
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py     106               face_with_actor()]# INFO       MainActor facing with mob:5 9
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py     106               face_with_actor()]# INFO       MainActor facing with mob:6 10
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py     106               face_with_actor()]# INFO       MainActor facing with mob:10 6
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py      94           face_with_immovable()]# INFO       MainActor facing with immovable:3 5
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 273, 'mod': 0, 'scancode': 111})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 276, 'mod': 0, 'scancode': 113})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 274, 'mod': 0, 'scancode': 116})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[actor.py     106               face_with_actor()]# INFO       MainActor facing with mob:1 4
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method ImmovablesContainer.update of <immovables.ImmovablesContainer object at 0x7f751cba5470>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method TextsContainer.update of <textobject.TextsContainer object at 0x7f751cba55c0>> will processes an event: 
[main.py       64                         _step()]# INFO       Event: <Event(2-KeyDown {'unicode': '', 'key': 275, 'mod': 0, 'scancode': 114})>
[main.py       71                         _step()]# INFO       Handler <bound method MainActor.update of <actor.MainActor object at 0x7f750edbb8d0>> will processes an event: 
[main.py       71                         _step()]# INFO       Handler <bound method MobsContainer.update of <actor.MobsContainer object at 0x7f751cba5358>> will processes an event: 
[actor.py     145                     game_over()]# INFO       MainActor game_over win_flagTrue
[textobject.py  46               draw_final_text()]# INFO       Drawing final text:YOU ARE WIN!
